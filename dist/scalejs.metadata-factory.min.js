define("text!scalejs.metadata-factory/metadata-factory.html",[],function(){return'<div id="metadata_items_template">\n    <!-- ko template: { name: \'metadata_item_template\', foreach: $data } -->\n\n    <!--/ko -->\n</div>\n\n<div id="metadata_item_template">\n    <!-- ko template: $data.template || $data.type + \'_template\' -->\n    <!-- /ko -->\n</div>\n\n<div id="metadata_default_template">\n    <div data-bind="text: JSON.stringify($data)"></div>\n</div>\n\n<div id="metadata_loading_template">\n    Loading\n</div>'}),define("scalejs.metadata-factory",["scalejs!core","knockout","scalejs.mvvm.views!scalejs.metadata-factory/metadata-factory"],function(a,b){"use strict";function c(a){this&&this.metadata||console.warn('Creating viewmodel without metadata context. If metadata context is desired, call this function using "this"');var b=l[a.type]?l[a.type].call(this,a):f.call(this,a);return b&&(b.type=b.type||a.type),b}function d(a){var b;return this&&this.metadata||console.warn("A new instance of metadata has been detected, therefore a new context will be created"),b=this&&this.metadata?this:{metadata:a},a.map(function(a){return c.call(b,a)}).filter(function(a){return k(a)})}function e(b){if(!b)return a.mvvm.template("metadata_loading_template");Array.isArray(b)||(b=[b]);var c=d(b);return a.mvvm.template("metadata_items_template",c)}function f(b){return m?a.object.merge(b,{template:"metadata_default_template"}):void 0}function g(b){a.object.extend(this,b)}function h(b){var c=d(b.children||[]);return a.object.merge(b,{mappedChildNodes:c})}function i(b){a.object.extend(l,b)}function j(a){b.unwrap(a).forEach(function(a){a.dispose&&a.dispose(),j(a.mappedChildNodes||[])})}var k=a.object.has,l={"":f,template:h,context:g},m=!0;b.bindingHandlers.metadataFactory={init:function(){return{controlsDescendantBindings:!0}},update:function(a,c,d,f,g){var h=b.unwrap(c()),i=e(h).template,k=b.utils.domData.get(a,"metadata");k&&(k=Array.isArray(k)?k:[k],j(k)),b.utils.domData.set(a,"metadata",i.data),setTimeout(function(){b.bindingHandlers.template.update(a,function(){return i},d,f,g)})}},a.registerExtension({metadataFactory:{createTemplate:e,registerViewModels:i,createViewModels:d,createViewModel:c,useDefault:m}})});
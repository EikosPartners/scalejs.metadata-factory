define("text!scalejs.metadataFactory/metadataFactory.html",[],function(){return'<div id="metadata_items_template">\r\n    <!-- ko template: { name: \'metadata_item_template\', foreach: $data } -->\r\n\r\n    <!--/ko -->\r\n</div>\r\n\r\n<div id="metadata_item_template">\r\n    <!-- ko comment: $data.template || $data.type + \'_template\' -->\r\n    <!-- /ko -->\r\n    <!-- ko if: ($data.rendered == null) ? true : $data.rendered  -->\r\n    <!-- ko template: $data.template || $data.type + \'_template\' -->\r\n    <!-- /ko -->\r\n    <!-- /ko -->\r\n</div>\r\n\r\n<div id="metadata_default_template">\r\n    <div data-bind="text: JSON.stringify($data)"></div>\r\n</div>\r\n\r\n<div id="metadata_loading_template">\r\n    <div class="loader hexdots-loader">\r\n    loading...\r\n    </div>\r\n</div>'}),define("text!scalejs.metadataFactory/action/views/action.html",[],function(){return'<div id="action_template">\r\n    <div data-bind="css: $data.classes, visible:isShown" class="action-button-wrapper">\r\n        <button data-class="action-button">\r\n            <span data-bind="text: text"></span>\r\n        </button>\r\n    </div>\r\n</div>\r\n'}),define("scalejs.metadataFactory/action/bindings/actionBindings.js",{"action-button":function(){var a=this.buttonClasses||"";return this.icon&&(a+=" fa fa-"+this.icon),{click:function(){this.action()},css:a}}}),define("scalejs.metadataFactory/action/viewmodels/actionViewModel",["scalejs!core","knockout","text!scalejs.metadataFactory/action/views/action.html","scalejs.metadataFactory/action/bindings/actionBindings.js","scalejs.reactive","scalejs.mvvm"],function(a,b,c,d){"use strict";function e(a){g(i(a.target),a.params)}var f=a.object.merge,g=a.reactive.messageBus.notify,h=b.observable,i=b.unwrap;return a.mvvm.registerTemplates(c),a.mvvm.registerBindings(d),function(b){function c(){return p?void(k?g(k,{successCallback:p,options:l}):p(l,arguments)):void console.error("actions[actionType] is not defined",b)}var d=a.metadataFactory.getRegisteredActions(),i=b.text||b.options.text,j=a.metadataFactory.createViewModel.bind(this),k=b.validate,l=b.options||{},m=b.actionType,n={notify:e},o=a.object.extend(n,d),p=o[m]||null,q=h(!0),r=this;return p&&(p=p.bind(this)),"dropdown"===m&&(l.dropdown={showDropdown:h(!1),items:l.items.map(function(a){return j("string"==typeof a?{type:"action",text:a}:a)})}),f(b,{isShown:q,action:c,text:i,actionType:m,options:l,context:r})}}),define("scalejs.metadataFactory/action/actionModule",["scalejs!core","scalejs.metadataFactory/action/viewmodels/actionViewModel","scalejs.mvvm"],function(a,b){"use strict";function c(){return f}function d(b){a.object.extend(f,b)}var e=b,f={};return{action:e,registerActions:d,getRegisteredActions:c}}),define("scalejs.metadataFactory/template/templateViewModel",["scalejs!core","lodash","knockout"],function(a,b,c){"use strict";return function(d){var e,f,g=c.observable,h=a.object.merge,i=g(d.data||{}),j=d.options&&d.options.createContext?{metadata:[],data:i}:this,k=a.metadataFactory.createViewModel.bind(j),l=a.metadataFactory.createViewModels.bind(j),m=g(d.visible!==!1),n=b.cloneDeep(d.action);if(f=l(d.children||[]),e=n?k(n):function(){},d.dataSourceEndpoint){var o={callback:function(a,b){return a?void console.log("ajax request error",a):void i(b)}};k(d.dataSourceEndpoint).action(o)}return h(d,{mappedChildNodes:f,action:e,data:i,isShown:m,context:this})}}),define("scalejs.metadataFactory",["scalejs!core","knockout","lodash","text!scalejs.metadataFactory/metadataFactory.html","scalejs.metadataFactory/action/actionModule","scalejs.metadataFactory/template/templateViewModel","moment","scalejs.mvvm","scalejs.expression-jsep"],function(a,b,c,d,e,f,g){"use strict";function h(b){var d=t(!0),e=this;if(b=c.cloneDeep(b),!b||"ignore"!==b.type){var f=v[b.type]?v[b.type].call(this,b):k.call(this,b);return f&&p(b.rendered)&&(d=q(b.rendered,"boolean")?t(b.rendered):r(function(){return s(b.rendered,function(b){return e.getValue&&p(e.getValue(b))?e.getValue(b):"role"===b?a.userservice.role():""})})),f&&(f.type=f.type||b.type,f.rendered=d),f}console.log("ignored node ",b)}function i(d){var e;return e=this&&this.metadata?this:{metadata:d,getValue:function(d){return"store"===d&&a.noticeboard.global?b.unwrap(a.noticeboard.global.dictionary):"_"===d?c:"Date"==d?function(a){return g(a).toDate().getTime()}:"IncrementDate"==d?function(a,b,c){return g(a).add(b,c).toDate().getTime()}:void 0}},d.map(function(a){return h.call(e,a)}).filter(function(a){return p(a)})}function j(b,c){if(!b)return a.mvvm.template("metadata_loading_template");Array.isArray(b)||(b=[b]);var d=c?i.call(c,b):i(b);return a.mvvm.template("metadata_items_template",d)}function k(b){return w?a.object.merge(b,{template:"metadata_default_template"}):void 0}function l(b){var c={};Object.keys(b).forEach(function(a){"type"!==a&&(Array.isArray(b[a])?c[a]=u(b[a]):c[a]=t(b[a]))}),a.object.extend(this,c)}function m(b){a.object.extend(v,b)}function n(a){b.unwrap(a).forEach(function(a){a.dispose&&a.dispose(),n(a.mappedChildNodes||[])})}function o(){var b={$schema:"http://json-schema.org/draft-04/schema#",definitions:{template:{type:"string","enum":[]},type:{type:"string","enum":[]},children:{type:"array",items:{type:"object",properties:{template:{$ref:"#/definitions/template"},type:{$ref:"#/definitions/type"},children:{$ref:"#/definitions/children"},options:{$ref:"#/definitions/options"}}}},options:{type:"object"},classes:{type:"string"}},type:["array","object"],properties:{template:{$ref:"#/definitions/template"},type:{$ref:"#/definitions/type"},children:{$ref:"#/definitions/children"},options:{$ref:"#/definitions/options"}}};for(var c in v)""!==c&&b.definitions.type["enum"].push(c);b.definitions.type["enum"].sort();for(var c in a.mvvm.getRegisteredTemplates())""!==c&&b.definitions.template["enum"].push(c);return b.definitions.template["enum"].sort(),b}a.mvvm.registerTemplates(d);var p=a.object.has,q=a.type.is,r=b.computed,s=a.expression.evaluate,t=b.observable,u=b.observableArray,v={"":k,context:l,action:e.action,template:f},w=!0;b.bindingHandlers.metadataFactory={init:function(){return{controlsDescendantBindings:!0}},update:function(a,c,d,e,f){function g(){h=b.utils.domData.get(a,"metadata"),h&&(h=Array.isArray(h)?h:[h],n(h))}var h,i=b.unwrap(c()).metadata?b.unwrap(c()).metadata:b.unwrap(c()),k=b.unwrap(c()).context?b.unwrap(c()).context:null;setTimeout(function(){var c=j(i,k).template;g(),b.utils.domData.set(a,"metadata",c.data),b.bindingHandlers.template.update(a,function(){return c},d,e,f),h||b.utils.domNodeDisposal.addDisposeCallback(a,function(){g()})})}};var x={metadataFactory:{createTemplate:j,registerViewModels:m,createViewModels:i,createViewModel:h,useDefault:w,registerActions:e.registerActions,getRegisteredActions:e.getRegisteredActions,generateSchema:o}};return a.registerExtension(x),x});
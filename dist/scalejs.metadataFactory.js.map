{"version":3,"sources":["../src/scalejs.metadataFactory.js"],"names":[],"mappings":"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","file":"scalejs.metadataFactory.js","sourcesContent":["import { registerTemplates, registerBindings, getRegisteredTemplates, template } from 'scalejs.mvvm';\nimport {observable, observableArray, computed} from 'knockout';\nimport * as noticeboard from 'scalejs.noticeboard';\nimport ko from 'knockout';\nimport _ from 'lodash';\n\nimport view from './views/metadataFactory.html';\nimport moment from 'moment';\nimport { evaluate } from 'scalejs.expression-jsep';\n\nimport { get, is, has, merge } from 'scalejs';\nregisterTemplates(view);\n\nvar viewModels = {\n        '': defaultViewModel,\n        context: contextViewModel\n    },\n    schemas = {\n\n    },\n    identifiers = {},\n    useDefault = true;\n\n\nfunction createViewModel(node) {\n    var rendered = observable(true),\n        context = this;\n\n    node = _.cloneDeep(node); //clone the node to stop mutation issues\n\n    // if(!this || !this.metadata) {\n    //     console.warn('Creating viewmodel without metadata context. If metadata context is desired, call this function using \"this\"');\n    // }\n    if (node && node.type === 'ignore') {\n        console.log('ignored node ', node);\n    } else {\n        var mappedNode;\n        if (viewModels[node.type]) {\n            mappedNode = viewModels[node.type].call(this, node);\n        } else {\n            console.log('no viewModel of type ' + node.type + ' was found')\n            mappedNode = defaultViewModel.call(this, node);\n        }\n\n        if (mappedNode && has(node.rendered)) {\n            rendered = is(node.rendered, 'boolean') ? observable(node.rendered) : computed(function () {\n                return evaluate(node.rendered, function (id) {\n                    if (context.getValue && has(context.getValue(id))) {\n                        return context.getValue(id);\n                    }\n                    //if (id === 'role') {\n                    //    return core.userservice.role();\n                    //}\n                    return '';\n                })\n            });\n        }\n        if (mappedNode) {\n            mappedNode.type = mappedNode.type || node.type;\n            mappedNode.rendered = rendered;\n        }\n        return mappedNode;\n    }\n}\n\nfunction createViewModels(metadata) {\n    var metadataContext;\n    // allows all viewmodels created in the same instane of metadata\n    // to share context (as long as createViewModels is called correctly)\n    if (this && this.metadata) {\n        metadataContext = this;\n    } else {\n        metadataContext = {\n            metadata: metadata,\n            // default getValue can grab from the store\n            getValue: function (id) {\n                if (id === 'store' && noticeboard.dictonary) {\n                    return unwrap(noticeboard.dictionary);\n                }\n                if (id === '_') {\n                    return _;\n                }\n                if (id == 'Date') {\n                    return function (d) {\n                        return moment(d).toDate().getTime();\n                    }\n                }\n                if (id == 'IncrementDate') {\n                    return function (d, t, s) {\n                        return moment(d).add(t, s).toDate().getTime();\n                    }\n                }\n                return identifiers[id];\n            }\n        };\n    }\n\n    return metadata.map(function (item) {\n        return createViewModel.call(metadataContext, item)\n    }).filter(function (vm) {\n        // filter undefined or null from the viewmodels array\n        return has(vm);\n    });\n}\n\nfunction createTemplate(metadata, context) {\n    if (!metadata) {\n        return template('metadata_loading_template');\n    }\n    if (!Array.isArray(metadata)) {\n        metadata = [metadata];\n    }\n\n    var viewModels = !context ? createViewModels(metadata) : createViewModels.call(context, metadata);\n\n    return template('metadata_items_template', viewModels);\n}\n\nfunction defaultViewModel(node) {\n    if (!useDefault) {\n        return;\n    }\n    return merge(node, {\n        template: 'metadata_default_template'\n    });\n}\n\nfunction contextViewModel(node) {\n    var newContextProps = {};\n    Object.keys(node).forEach(function (prop) {\n        if (prop === 'type') {\n            return;\n        }\n        if (Array.isArray(node[prop])) {\n            newContextProps[prop] = observableArray(node[prop]);\n        } else {\n            newContextProps[prop] = observable(node[prop]);\n        }\n    });\n    _.extend(this, newContextProps);\n}\n\nfunction registerViewModels(newViewModels) {\n    _.extend(viewModels, newViewModels);\n}\n\nfunction getRegisteredTypes() {\n    return Object.keys(viewModels);\n}\n\nfunction registerIdentifiers(ids) {\n    _.extend(identifiers, ids);\n}\n\nfunction dispose(metadata) {\n    // clean up clean up everybody everywhere\n    unwrap(metadata).forEach(function (node) {\n        if (node.dispose) {\n            node.dispose();\n        }\n        dispose(node.mappedChildNodes || []);\n    })\n}\n\nfunction registerSchema(schema) {\n    for (var key in schema) {\n        // if( schemas.hasOwnProperty(key) ){\n        if (key !== '') {\n            schemas[key] = schema[key];\n        }\n    }\n}\n\nfunction generateSchema() {\n\n    //Basic schema layout for pjson\n    var schema = {\n        '$schema': 'http://json-schema.org/draft-04/schema#',\n        'definitions': {\n            'template': {\n                'type': 'string'\n            },\n            'type': {\n                'type': 'string'\n            },\n            'templateExt': {\n                'oneOf': [\n                    // case where no template is provided\n                    {\n                        'not': {\n                            'required': ['template']\n                        }\n                    }\n                ]\n            },\n            'typeExt': {\n                'oneOf': []\n            },\n            'children': {\n                'type': 'array',\n                'items': {\n                    '$ref': '#/definitions/subObject'\n                }\n            },\n            'options': {\n                'type': 'object'\n            },\n            'classes': {\n                'type': 'string'\n            },\n            'subObject': {\n                'allOf': [{\n                    // Base properties\n                    'type': 'object',\n                    'properties': {\n                        'template': {}, // makes sure template/type show up as options\n                        'type': {},\n                        'children': {\n                            '$ref': '#/definitions/children'\n                        },\n                        'options': {\n                            '$ref': '#/definitions/options'\n                        }\n                    },\n                    'required': ['type']\n                },\n                    // populates templates, types, and corresponding options\n                    {\n                        '$ref': '#/definitions/typeExt'\n                    }, {\n                        '$ref': '#/definitions/templateExt'\n                    }\n                ]\n            }\n        },\n        'oneOf': [{\n            '$ref': '#/definitions/subObject'\n        }, {\n                'type': 'array',\n                'items': {\n                    '$ref': '#/definitions/subObject'\n                }\n            }]\n    };\n\n    //Add all templates to the schema\n    var option;\n    var otherTemplates = [];\n    for (var key in getRegisteredTemplates()) {\n        if (key !== '') {\n            if (schemas.hasOwnProperty(key)) {\n                // Add extended templates\n                option = {\n                    'properties': {\n                        'template': {\n                            'enum': [key]\n                        },\n                        'options': {\n                            'type': 'object',\n                            'properties': schemas[key]\n                        }\n                    },\n                    'required': ['template'] // ensures matching template\n                }\n                schema.definitions.templateExt.oneOf.push(option);\n            } else {\n                otherTemplates.push(key);\n            }\n        }\n    }\n    if (otherTemplates.length > 0) {\n        // Add regular templates\n        schema.definitions.template.enum = otherTemplates;\n        option = {\n            'properties': {\n                'template': {\n                    '$ref': '#/definitions/template'\n                }\n            },\n            'required': ['template'] // ensures matching template\n        }\n        schema.definitions.templateExt.oneOf.push(option);\n    }\n\n    //Add all types to the schema\n    var otherTypes = [];\n    for (var key in viewModels) {\n        if (key !== '') {\n            if (schemas.hasOwnProperty(key + '_template')) {\n                // Add extended types\n                var option = {\n                    'properties': {\n                        'type': {\n                            'enum': [key]\n                        },\n                        'options': {\n                            'type': 'object',\n                            'properties': schemas[key + '_template']\n                        }\n                    }\n                }\n                schema.definitions.typeExt.oneOf.push(option);\n            } else {\n                otherTypes.push(key);\n            }\n        }\n    }\n    if (otherTypes.length > 0) {\n        // Add regular types\n        schema.definitions.type.enum = otherTypes;\n        option = {\n            'properties': {\n                'type': {\n                    '$ref': '#/definitions/type'\n                }\n            }\n        }\n        schema.definitions.typeExt.oneOf.push(option);\n    }\n\n    return schema;\n\n}\n\nko.bindingHandlers.metadataSync = {}; // optional for MD factory\n\nko.bindingHandlers.metadataFactory = {\n    init: function () {\n        return {\n            controlsDescendantBindings: true\n        };\n    },\n    update: function (\n        element,\n        valueAccessor,\n        allBindings,\n        viewModel,\n        bindingContext\n    ) {\n\n\n        var value = unwrap(valueAccessor()) || {};\n\n        var metadata = value.metadata ? value.metadata : value,\n            sync = allBindings().metadataSync,\n            context = value.context ? value.context : null,\n            prevMetadata;\n\n        function disposeMetadata() {\n            prevMetadata = ko.utils.domData.get(element, 'metadata');\n\n            if (prevMetadata) {\n                prevMetadata = Array.isArray(prevMetadata) ? prevMetadata : [prevMetadata];\n                dispose(prevMetadata);\n            }\n        }\n\n        function applyMetadataBinding() {\n            var metadataTemplate = createTemplate(metadata, context).template;\n\n            disposeMetadata();\n\n            ko.utils.domData.set(element, 'metadata', metadataTemplate.data);\n\n            ko.bindingHandlers.template.update(\n                element,\n                function () {\n                    return metadataTemplate;\n                },\n                allBindings,\n                viewModel,\n                bindingContext\n            );\n\n            // first time running - set dom node disposal\n            if (!prevMetadata) {\n                ko.utils.domNodeDisposal.addDisposeCallback(element, function () {\n                    disposeMetadata();\n                });\n            }\n        }\n\n        if (sync) {\n            applyMetadataBinding();\n        } else {\n            setTimeout(applyMetadataBinding);\n        }\n    }\n\n}\n\nexport {\ncreateTemplate,\nregisterViewModels,\ncreateViewModels,\ncreateViewModel,\nuseDefault,\nregisterIdentifiers,\ngetRegisteredTypes\n}\n"]}
{"version":3,"sources":["../src/scalejs.metadataFactory.js"],"names":["noticeboard","viewModels","defaultViewModel","context","contextViewModel","globalMetadata","schemas","identifiers","useDefault","createViewModel","node","rendered","cloneDeep","type","console","log","mappedNode","call","renderedExp","id","getValue","createViewModels","metadata","metadataContext","dictionary","unwrap","d","toDate","getTime","utc","format","t","s","add","map","item","filter","vm","createTemplate","Array","isArray","template","newContextProps","Object","keys","forEach","prop","extend","registerViewModels","newViewModels","getRegisteredTypes","registerIdentifiers","ids","dispose","mappedChildNodes","registerSchema","schema","key","generateSchema","option","otherTemplates","hasOwnProperty","definitions","templateExt","oneOf","push","length","enum","otherTypes","typeExt","bindingHandlers","metadataSync","metadataFactory","init","controlsDescendantBindings","update","element","valueAccessor","allBindings","viewModel","bindingContext","value","sync","prevMetadata","disposeMetadata","utils","domData","get","applyMetadataBinding","metadataTemplate","set","data","domNodeDisposal","addDisposeCallback","ignoreDependencies","setTimeout"],"mappings":"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","file":"scalejs.metadataFactory.js","sourcesContent":["import { registerTemplates, registerBindings, getRegisteredTemplates, template } from 'scalejs.mvvm';\r\nimport {observable, observableArray, computed} from 'knockout';\r\nimport * as noticeboard from 'scalejs.noticeboard';\r\nimport ko from 'knockout';\r\nimport _ from 'lodash';\r\n\r\nimport view from './views/metadataFactory.html';\r\nimport moment from 'moment';\r\nimport { evaluate } from 'scalejs.expression-jsep';\r\n\r\nimport { get, is, has, merge } from 'scalejs';\r\nregisterTemplates(view);\r\n\r\nvar viewModels = {\r\n        '': defaultViewModel,\r\n        context: contextViewModel\r\n    },\r\n    globalMetadata = observable({}),\r\n    schemas = {\r\n\r\n    },\r\n    identifiers = {},\r\n    useDefault = true;\r\n\r\n\r\nfunction createViewModel(node) {\r\n    var rendered = observable(true),\r\n        context = this;\r\n\r\n    node = _.cloneDeep(node); //clone the node to stop mutation issues\r\n\r\n    // if(!this || !this.metadata) {\r\n    //     console.warn('Creating viewmodel without metadata context. If metadata context is desired, call this function using \"this\"');\r\n    // }\r\n    if (node && node.type === 'ignore') {\r\n        console.log('ignored node ', node);\r\n    } else {\r\n        var mappedNode;\r\n        if (viewModels[node.type]) {\r\n            mappedNode = viewModels[node.type].call(this, node);\r\n        } else {\r\n            console.log('no viewModel of type ' + node.type + ' was found')\r\n            mappedNode = defaultViewModel.call(this, node);\r\n        }\r\n\r\n        if (mappedNode && has(node.rendered)) {\r\n            let renderedExp = node.rendered;\r\n\r\n            rendered = is(node.rendered, 'boolean') ? observable(node.rendered) : computed(function () {\r\n                return evaluate(renderedExp, function (id) {\r\n                    if (context.getValue && has(context.getValue(id))) {\r\n                        return context.getValue(id);\r\n                    }\r\n                    //if (id === 'role') {\r\n                    //    return core.userservice.role();\r\n                    //}\r\n                    return '';\r\n                })\r\n            });\r\n        }\r\n        if (mappedNode) {\r\n            mappedNode.type = mappedNode.type || node.type;\r\n            mappedNode.rendered = rendered;\r\n        }\r\n        return mappedNode;\r\n    }\r\n}\r\n\r\nfunction createViewModels(metadata) {\r\n    var metadataContext;\r\n    // allows all viewmodels created in the same instane of metadata\r\n    // to share context (as long as createViewModels is called correctly)\r\n    if (this && this.metadata) {\r\n        metadataContext = this;\r\n    } else {\r\n        metadataContext = {\r\n            metadata: metadata,\r\n            // default getValue can grab from the store\r\n            getValue: function (id) {\r\n                if (id === 'store' && noticeboard.dictionary) {\r\n                    return ko.unwrap(noticeboard.dictionary);\r\n                }\r\n                if (id === '_') {\r\n                    return _;\r\n                }\r\n                if (id == 'Date') {\r\n                    return function (d) {\r\n                        return moment(d).toDate().getTime();\r\n                    }\r\n                }\r\n                if (id === 'currentDateUTC') {\r\n                    return moment.utc().format();\r\n                }\r\n                if (id == 'IncrementDate') {\r\n                    return function (d, t, s) {\r\n                        return moment(d).add(t, s).toDate().getTime();\r\n                    }\r\n                }\r\n                return identifiers[id];\r\n            }\r\n        };\r\n    }\r\n\r\n    return metadata.map(function (item) {\r\n        return createViewModel.call(metadataContext, item)\r\n    }).filter(function (vm) {\r\n        // filter undefined or null from the viewmodels array\r\n        return has(vm);\r\n    });\r\n}\r\n\r\nfunction createTemplate(metadata, context) {\r\n    if (!metadata) {\r\n        return template('metadata_loading_template');\r\n    }\r\n    if (!Array.isArray(metadata)) {\r\n        metadata = [metadata];\r\n    }\r\n\r\n    var viewModels = !context ? createViewModels(metadata) : createViewModels.call(context, metadata);\r\n\r\n    return template('metadata_items_template', viewModels);\r\n}\r\n\r\nfunction defaultViewModel(node) {\r\n    if (!useDefault) {\r\n        return;\r\n    }\r\n    return merge(node, {\r\n        template: 'metadata_default_template'\r\n    });\r\n}\r\n\r\nfunction contextViewModel(node) {\r\n    var newContextProps = {};\r\n    Object.keys(node).forEach(function (prop) {\r\n        if (prop === 'type') {\r\n            return;\r\n        }\r\n        if (Array.isArray(node[prop])) {\r\n            newContextProps[prop] = observableArray(node[prop]);\r\n        } else {\r\n            newContextProps[prop] = observable(node[prop]);\r\n        }\r\n    });\r\n    _.extend(this, newContextProps);\r\n}\r\n\r\nfunction registerViewModels(newViewModels) {\r\n    _.extend(viewModels, newViewModels);\r\n}\r\n\r\nfunction getRegisteredTypes() {\r\n    return Object.keys(viewModels);\r\n}\r\n\r\nfunction registerIdentifiers(ids) {\r\n    _.extend(identifiers, ids);\r\n}\r\n\r\nfunction dispose(metadata) {\r\n    // clean up clean up everybody everywhere\r\n    ko.unwrap(metadata).forEach(function (node) {\r\n        if (node.dispose) {\r\n            node.dispose();\r\n        }\r\n        dispose(node.mappedChildNodes || []);\r\n    })\r\n}\r\n\r\nfunction registerSchema(schema) {\r\n    for (var key in schema) {\r\n        // if( schemas.hasOwnProperty(key) ){\r\n        if (key !== '') {\r\n            schemas[key] = schema[key];\r\n        }\r\n    }\r\n}\r\n\r\nfunction generateSchema() {\r\n\r\n    //Basic schema layout for pjson\r\n    var schema = {\r\n        '$schema': 'http://json-schema.org/draft-04/schema#',\r\n        'definitions': {\r\n            'template': {\r\n                'type': 'string'\r\n            },\r\n            'type': {\r\n                'type': 'string'\r\n            },\r\n            'templateExt': {\r\n                'oneOf': [\r\n                    // case where no template is provided\r\n                    {\r\n                        'not': {\r\n                            'required': ['template']\r\n                        }\r\n                    }\r\n                ]\r\n            },\r\n            'typeExt': {\r\n                'oneOf': []\r\n            },\r\n            'children': {\r\n                'type': 'array',\r\n                'items': {\r\n                    '$ref': '#/definitions/subObject'\r\n                }\r\n            },\r\n            'options': {\r\n                'type': 'object'\r\n            },\r\n            'classes': {\r\n                'type': 'string'\r\n            },\r\n            'subObject': {\r\n                'allOf': [{\r\n                    // Base properties\r\n                    'type': 'object',\r\n                    'properties': {\r\n                        'template': {}, // makes sure template/type show up as options\r\n                        'type': {},\r\n                        'children': {\r\n                            '$ref': '#/definitions/children'\r\n                        },\r\n                        'options': {\r\n                            '$ref': '#/definitions/options'\r\n                        }\r\n                    },\r\n                    'required': ['type']\r\n                },\r\n                    // populates templates, types, and corresponding options\r\n                    {\r\n                        '$ref': '#/definitions/typeExt'\r\n                    }, {\r\n                        '$ref': '#/definitions/templateExt'\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        'oneOf': [{\r\n            '$ref': '#/definitions/subObject'\r\n        }, {\r\n                'type': 'array',\r\n                'items': {\r\n                    '$ref': '#/definitions/subObject'\r\n                }\r\n            }]\r\n    };\r\n\r\n    //Add all templates to the schema\r\n    var option;\r\n    var otherTemplates = [];\r\n    for (var key in getRegisteredTemplates()) {\r\n        if (key !== '') {\r\n            if (schemas.hasOwnProperty(key)) {\r\n                // Add extended templates\r\n                option = {\r\n                    'properties': {\r\n                        'template': {\r\n                            'enum': [key]\r\n                        },\r\n                        'options': {\r\n                            'type': 'object',\r\n                            'properties': schemas[key]\r\n                        }\r\n                    },\r\n                    'required': ['template'] // ensures matching template\r\n                }\r\n                schema.definitions.templateExt.oneOf.push(option);\r\n            } else {\r\n                otherTemplates.push(key);\r\n            }\r\n        }\r\n    }\r\n    if (otherTemplates.length > 0) {\r\n        // Add regular templates\r\n        schema.definitions.template.enum = otherTemplates;\r\n        option = {\r\n            'properties': {\r\n                'template': {\r\n                    '$ref': '#/definitions/template'\r\n                }\r\n            },\r\n            'required': ['template'] // ensures matching template\r\n        }\r\n        schema.definitions.templateExt.oneOf.push(option);\r\n    }\r\n\r\n    //Add all types to the schema\r\n    var otherTypes = [];\r\n    for (var key in viewModels) {\r\n        if (key !== '') {\r\n            if (schemas.hasOwnProperty(key + '_template')) {\r\n                // Add extended types\r\n                var option = {\r\n                    'properties': {\r\n                        'type': {\r\n                            'enum': [key]\r\n                        },\r\n                        'options': {\r\n                            'type': 'object',\r\n                            'properties': schemas[key + '_template']\r\n                        }\r\n                    }\r\n                }\r\n                schema.definitions.typeExt.oneOf.push(option);\r\n            } else {\r\n                otherTypes.push(key);\r\n            }\r\n        }\r\n    }\r\n    if (otherTypes.length > 0) {\r\n        // Add regular types\r\n        schema.definitions.type.enum = otherTypes;\r\n        option = {\r\n            'properties': {\r\n                'type': {\r\n                    '$ref': '#/definitions/type'\r\n                }\r\n            }\r\n        }\r\n        schema.definitions.typeExt.oneOf.push(option);\r\n    }\r\n\r\n    return schema;\r\n\r\n}\r\n\r\nko.bindingHandlers.metadataSync = {}; // optional for MD factory\r\n\r\nko.bindingHandlers.metadataFactory = {\r\n    init: function () {\r\n        return {\r\n            controlsDescendantBindings: true\r\n        };\r\n    },\r\n    update: function (\r\n        element,\r\n        valueAccessor,\r\n        allBindings,\r\n        viewModel,\r\n        bindingContext\r\n    ) {\r\n\r\n\r\n        var value = ko.unwrap(valueAccessor()) || {};\r\n\r\n        var metadata = value.metadata ? value.metadata : value,\r\n            sync = allBindings().metadataSync,\r\n            context = value.context ? value.context : null,\r\n            prevMetadata;\r\n\r\n        function disposeMetadata() {\r\n            prevMetadata = ko.utils.domData.get(element, 'metadata');\r\n\r\n            if (prevMetadata) {\r\n                prevMetadata = Array.isArray(prevMetadata) ? prevMetadata : [prevMetadata];\r\n                dispose(prevMetadata);\r\n            }\r\n        }\r\n\r\n        function applyMetadataBinding() {\r\n            disposeMetadata();\r\n            var metadataTemplate = createTemplate(metadata, context).template;\r\n\r\n            ko.utils.domData.set(element, 'metadata', metadataTemplate.data);\r\n\r\n            ko.bindingHandlers.template.update(\r\n                element,\r\n                function () {\r\n                    return metadataTemplate;\r\n                },\r\n                allBindings,\r\n                viewModel,\r\n                bindingContext\r\n            );\r\n\r\n            // first time running - set dom node disposal\r\n            if (!prevMetadata) {\r\n                ko.utils.domNodeDisposal.addDisposeCallback(element, function () {\r\n                    disposeMetadata();\r\n                });\r\n            }\r\n        }\r\n\r\n        if (sync) {\r\n            ko.ignoreDependencies(applyMetadataBinding);\r\n        } else {\r\n            setTimeout(applyMetadataBinding);\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport {\r\n    createTemplate,\r\n    registerViewModels,\r\n    createViewModels,\r\n    createViewModel,\r\n    useDefault,\r\n    registerIdentifiers,\r\n    getRegisteredTypes,\r\n    globalMetadata\r\n}\r\n"]}
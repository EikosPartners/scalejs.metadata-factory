{"version":3,"sources":["../src/scalejs.metadataFactory.js"],"names":[],"mappings":"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","file":"scalejs.metadataFactory.js","sourcesContent":["import { registerTemplates, registerBindings, getRegisteredTemplates, template } from 'scalejs.mvvm';\r\nimport {observable, observableArray, computed} from 'knockout';\r\nimport * as noticeboard from 'scalejs.noticeboard';\r\nimport ko from 'knockout';\r\nimport _ from 'lodash';\r\n\r\nimport view from './views/metadataFactory.html';\r\nimport moment from 'moment';\r\nimport { evaluate } from 'scalejs.expression-jsep';\r\n\r\nimport { get, is, has, merge } from 'scalejs';\r\nregisterTemplates(view);\r\n\r\nvar viewModels = {\r\n        '': defaultViewModel,\r\n        context: contextViewModel\r\n    },\r\n    schemas = {\r\n\r\n    },\r\n    identifiers = {},\r\n    useDefault = true;\r\n\r\n\r\nfunction createViewModel(node) {\r\n    var rendered = observable(true),\r\n        context = this;\r\n\r\n    node = _.cloneDeep(node); //clone the node to stop mutation issues\r\n\r\n    // if(!this || !this.metadata) {\r\n    //     console.warn('Creating viewmodel without metadata context. If metadata context is desired, call this function using \"this\"');\r\n    // }\r\n    if (node && node.type === 'ignore') {\r\n        console.log('ignored node ', node);\r\n    } else {\r\n        var mappedNode;\r\n        if (viewModels[node.type]) {\r\n            mappedNode = viewModels[node.type].call(this, node);\r\n        } else {\r\n            console.log('no viewModel of type ' + node.type + ' was found')\r\n            mappedNode = defaultViewModel.call(this, node);\r\n        }\r\n\r\n        if (mappedNode && has(node.rendered)) {\r\n            let renderedExp = node.rendered;\r\n\r\n            rendered = is(node.rendered, 'boolean') ? observable(node.rendered) : computed(function () {\r\n                return evaluate(renderedExp, function (id) {\r\n                    if (context.getValue && has(context.getValue(id))) {\r\n                        return context.getValue(id);\r\n                    }\r\n                    //if (id === 'role') {\r\n                    //    return core.userservice.role();\r\n                    //}\r\n                    return '';\r\n                })\r\n            });\r\n        }\r\n        if (mappedNode) {\r\n            mappedNode.type = mappedNode.type || node.type;\r\n            mappedNode.rendered = rendered;\r\n        }\r\n        return mappedNode;\r\n    }\r\n}\r\n\r\nfunction createViewModels(metadata) {\r\n    var metadataContext;\r\n    // allows all viewmodels created in the same instane of metadata\r\n    // to share context (as long as createViewModels is called correctly)\r\n    if (this && this.metadata) {\r\n        metadataContext = this;\r\n    } else {\r\n        metadataContext = {\r\n            metadata: metadata,\r\n            // default getValue can grab from the store\r\n            getValue: function (id) {\r\n                if (id === 'store' && noticeboard.dictionary) {\r\n                    return ko.unwrap(noticeboard.dictionary);\r\n                }\r\n                if (id === '_') {\r\n                    return _;\r\n                }\r\n                if (id == 'Date') {\r\n                    return function (d) {\r\n                        return moment(d).toDate().getTime();\r\n                    }\r\n                }\r\n                if (id == 'IncrementDate') {\r\n                    return function (d, t, s) {\r\n                        return moment(d).add(t, s).toDate().getTime();\r\n                    }\r\n                }\r\n                return identifiers[id];\r\n            }\r\n        };\r\n    }\r\n\r\n    return metadata.map(function (item) {\r\n        return createViewModel.call(metadataContext, item)\r\n    }).filter(function (vm) {\r\n        // filter undefined or null from the viewmodels array\r\n        return has(vm);\r\n    });\r\n}\r\n\r\nfunction createTemplate(metadata, context) {\r\n    if (!metadata) {\r\n        return template('metadata_loading_template');\r\n    }\r\n    if (!Array.isArray(metadata)) {\r\n        metadata = [metadata];\r\n    }\r\n\r\n    var viewModels = !context ? createViewModels(metadata) : createViewModels.call(context, metadata);\r\n\r\n    return template('metadata_items_template', viewModels);\r\n}\r\n\r\nfunction defaultViewModel(node) {\r\n    if (!useDefault) {\r\n        return;\r\n    }\r\n    return merge(node, {\r\n        template: 'metadata_default_template'\r\n    });\r\n}\r\n\r\nfunction contextViewModel(node) {\r\n    var newContextProps = {};\r\n    Object.keys(node).forEach(function (prop) {\r\n        if (prop === 'type') {\r\n            return;\r\n        }\r\n        if (Array.isArray(node[prop])) {\r\n            newContextProps[prop] = observableArray(node[prop]);\r\n        } else {\r\n            newContextProps[prop] = observable(node[prop]);\r\n        }\r\n    });\r\n    _.extend(this, newContextProps);\r\n}\r\n\r\nfunction registerViewModels(newViewModels) {\r\n    _.extend(viewModels, newViewModels);\r\n}\r\n\r\nfunction getRegisteredTypes() {\r\n    return Object.keys(viewModels);\r\n}\r\n\r\nfunction registerIdentifiers(ids) {\r\n    _.extend(identifiers, ids);\r\n}\r\n\r\nfunction dispose(metadata) {\r\n    // clean up clean up everybody everywhere\r\n    ko.unwrap(metadata).forEach(function (node) {\r\n        if (node.dispose) {\r\n            node.dispose();\r\n        }\r\n        dispose(node.mappedChildNodes || []);\r\n    })\r\n}\r\n\r\nfunction registerSchema(schema) {\r\n    for (var key in schema) {\r\n        // if( schemas.hasOwnProperty(key) ){\r\n        if (key !== '') {\r\n            schemas[key] = schema[key];\r\n        }\r\n    }\r\n}\r\n\r\nfunction generateSchema() {\r\n\r\n    //Basic schema layout for pjson\r\n    var schema = {\r\n        '$schema': 'http://json-schema.org/draft-04/schema#',\r\n        'definitions': {\r\n            'template': {\r\n                'type': 'string'\r\n            },\r\n            'type': {\r\n                'type': 'string'\r\n            },\r\n            'templateExt': {\r\n                'oneOf': [\r\n                    // case where no template is provided\r\n                    {\r\n                        'not': {\r\n                            'required': ['template']\r\n                        }\r\n                    }\r\n                ]\r\n            },\r\n            'typeExt': {\r\n                'oneOf': []\r\n            },\r\n            'children': {\r\n                'type': 'array',\r\n                'items': {\r\n                    '$ref': '#/definitions/subObject'\r\n                }\r\n            },\r\n            'options': {\r\n                'type': 'object'\r\n            },\r\n            'classes': {\r\n                'type': 'string'\r\n            },\r\n            'subObject': {\r\n                'allOf': [{\r\n                    // Base properties\r\n                    'type': 'object',\r\n                    'properties': {\r\n                        'template': {}, // makes sure template/type show up as options\r\n                        'type': {},\r\n                        'children': {\r\n                            '$ref': '#/definitions/children'\r\n                        },\r\n                        'options': {\r\n                            '$ref': '#/definitions/options'\r\n                        }\r\n                    },\r\n                    'required': ['type']\r\n                },\r\n                    // populates templates, types, and corresponding options\r\n                    {\r\n                        '$ref': '#/definitions/typeExt'\r\n                    }, {\r\n                        '$ref': '#/definitions/templateExt'\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        'oneOf': [{\r\n            '$ref': '#/definitions/subObject'\r\n        }, {\r\n                'type': 'array',\r\n                'items': {\r\n                    '$ref': '#/definitions/subObject'\r\n                }\r\n            }]\r\n    };\r\n\r\n    //Add all templates to the schema\r\n    var option;\r\n    var otherTemplates = [];\r\n    for (var key in getRegisteredTemplates()) {\r\n        if (key !== '') {\r\n            if (schemas.hasOwnProperty(key)) {\r\n                // Add extended templates\r\n                option = {\r\n                    'properties': {\r\n                        'template': {\r\n                            'enum': [key]\r\n                        },\r\n                        'options': {\r\n                            'type': 'object',\r\n                            'properties': schemas[key]\r\n                        }\r\n                    },\r\n                    'required': ['template'] // ensures matching template\r\n                }\r\n                schema.definitions.templateExt.oneOf.push(option);\r\n            } else {\r\n                otherTemplates.push(key);\r\n            }\r\n        }\r\n    }\r\n    if (otherTemplates.length > 0) {\r\n        // Add regular templates\r\n        schema.definitions.template.enum = otherTemplates;\r\n        option = {\r\n            'properties': {\r\n                'template': {\r\n                    '$ref': '#/definitions/template'\r\n                }\r\n            },\r\n            'required': ['template'] // ensures matching template\r\n        }\r\n        schema.definitions.templateExt.oneOf.push(option);\r\n    }\r\n\r\n    //Add all types to the schema\r\n    var otherTypes = [];\r\n    for (var key in viewModels) {\r\n        if (key !== '') {\r\n            if (schemas.hasOwnProperty(key + '_template')) {\r\n                // Add extended types\r\n                var option = {\r\n                    'properties': {\r\n                        'type': {\r\n                            'enum': [key]\r\n                        },\r\n                        'options': {\r\n                            'type': 'object',\r\n                            'properties': schemas[key + '_template']\r\n                        }\r\n                    }\r\n                }\r\n                schema.definitions.typeExt.oneOf.push(option);\r\n            } else {\r\n                otherTypes.push(key);\r\n            }\r\n        }\r\n    }\r\n    if (otherTypes.length > 0) {\r\n        // Add regular types\r\n        schema.definitions.type.enum = otherTypes;\r\n        option = {\r\n            'properties': {\r\n                'type': {\r\n                    '$ref': '#/definitions/type'\r\n                }\r\n            }\r\n        }\r\n        schema.definitions.typeExt.oneOf.push(option);\r\n    }\r\n\r\n    return schema;\r\n\r\n}\r\n\r\nko.bindingHandlers.metadataSync = {}; // optional for MD factory\r\n\r\nko.bindingHandlers.metadataFactory = {\r\n    init: function () {\r\n        return {\r\n            controlsDescendantBindings: true\r\n        };\r\n    },\r\n    update: function (\r\n        element,\r\n        valueAccessor,\r\n        allBindings,\r\n        viewModel,\r\n        bindingContext\r\n    ) {\r\n\r\n\r\n        var value = ko.unwrap(valueAccessor()) || {};\r\n\r\n        var metadata = value.metadata ? value.metadata : value,\r\n            sync = allBindings().metadataSync,\r\n            context = value.context ? value.context : null,\r\n            prevMetadata;\r\n\r\n        function disposeMetadata() {\r\n            prevMetadata = ko.utils.domData.get(element, 'metadata');\r\n\r\n            if (prevMetadata) {\r\n                prevMetadata = Array.isArray(prevMetadata) ? prevMetadata : [prevMetadata];\r\n                dispose(prevMetadata);\r\n            }\r\n        }\r\n\r\n        function applyMetadataBinding() {\r\n            disposeMetadata();\r\n            var metadataTemplate = createTemplate(metadata, context).template;\r\n\r\n            ko.utils.domData.set(element, 'metadata', metadataTemplate.data);\r\n\r\n            ko.bindingHandlers.template.update(\r\n                element,\r\n                function () {\r\n                    return metadataTemplate;\r\n                },\r\n                allBindings,\r\n                viewModel,\r\n                bindingContext\r\n            );\r\n\r\n            // first time running - set dom node disposal\r\n            if (!prevMetadata) {\r\n                ko.utils.domNodeDisposal.addDisposeCallback(element, function () {\r\n                    disposeMetadata();\r\n                });\r\n            }\r\n        }\r\n\r\n        if (sync) {\r\n            ko.ignoreDependencies(applyMetadataBinding);\r\n        } else {\r\n            setTimeout(applyMetadataBinding);\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport {\r\ncreateTemplate,\r\nregisterViewModels,\r\ncreateViewModels,\r\ncreateViewModel,\r\nuseDefault,\r\nregisterIdentifiers,\r\ngetRegisteredTypes\r\n}\r\n"]}